<Crumb>
	<Crumb::Item @link="docs">Documentation</Crumb::Item>
	<Crumb::Item @link="docs.introduction">SurrealQL</Crumb::Item>
	<Crumb::Item @link="docs.introduction.mongo">SurrealDB for MongoDB developers</Crumb::Item>
</Crumb>

<Layout::Text text-l text-f>
    <h2>MongoDB to SurrealDB mapping</h2>
	<p>Quickly learn how to map your MongoDB knowledge to corresponding SurrealDB concepts and syntax.</p>
</Layout::Text>

<Layout::Gap mini />

<Docs::Heading @level="3" @id="introduction">Introduction</Docs::Heading>
<p>
    As a multi-model database, SurrealDB offers a lot of flexibility.
    Our SQL-like query language SurrealQL is a good example of this, where we often have more than one way to achieve the same result, depending on developer preference.
    In this mapping guide, we will focus on the syntax that most closely resembles the MongoDB query language (MQL).
</p>

<Docs::Heading @level="3" @id="concepts-mapping">Concepts mapping</Docs::Heading>
<p>
    For more in-depth explanations of SurrealDB concepts, see the <Link @link="docs.introduction.concepts">concepts page.</Link>
</p>
<Layout::Table filled>
	<table>
		<thead>
			<tr>
				<th w-50>MongoDB </th>
				<th w-50>SurrealDB</th>
			</tr>
		</thead>
		<tbody>
            <tr>
                <td>database</td>
                <td><Link @link="docs.surrealql.statements.define.database">database</Link></td>
            </tr>
            <tr>
                <td>collection</td>
                <td><Link @link="docs.surrealql.statements.define.table">table</Link></td>
            </tr>
            <tr>
                <td>document</td>
                <td><Link @link="docs.surrealql.datamodel.ids">record</Link></td>
            </tr>
            <tr>
                <td>field</td>
                <td><Link @link="docs.surrealql.statements.define.field">field</Link></td>
            </tr>
            <tr>
                <td>index</td>
                <td><Link @link="docs.surrealql.statements.define.index">index</Link></td>
            </tr>
            <tr>
                <td>ObjectId</td>
                <td><Link @link="docs.surrealql.datamodel.ids">record id</Link></td>
            </tr>
            <tr>
                <td>transactions</td>
                <td><Link @link="docs.surrealql.statements.begin">transactions</Link></td>
            </tr>
            <tr>
                <td>reference and embedding</td>
                <td><Link @link="docs.surrealql.datamodel.records">record links</Link>, embedding and <Link @link="docs.surrealql.statements.relate">graph relations</Link></td>
            </tr>
		</tbody>
	</table>
</Layout::Table>

<Layout::Gap small />

<Docs::Heading @level="3" @id="syntax-mapping">Syntax mapping</Docs::Heading>
<p>
    Let's get you up to speed with SurrealQL syntax with some CRUD examples.
</p>

<Docs::Heading @level="4" @id="create">Create</Docs::Heading>
<p>
    As MongoDB is schemaless, only the SurrealQL schemaless approach is shown below.
    For a schemafull option see the <Link @link="docs.surrealql.statements.define.table">define table</Link> page.
</p>
<p>
    For more SurrealQL examples,
    see the <Link @link="docs.surrealql.statements.create">create</Link>
    and <Link @link="docs.surrealql.statements.insert">insert</Link> pages.
</p>

<Layout::Table filled>
	<table>
		<thead>
			<tr>
				<th w-50>MQL</th>
				<th w-50>SurrealQL</th>
			</tr>
		</thead>
		<tbody>
			<tr>
				<td>
                    <Code @name="docs-surrealql-mongo-create.surql">
                        db.createCollection("person")
                    </Code>
				</td>
				<td>
                    <Code @name="docs-surrealql-create-person.surql">
                        CREATE person
                    </Code>
                </td>
			</tr>
			<tr>
				<td>
                    <Code @name="docs-surrealql-mongo-insert-one.surql">
                        db.person.insertOne({
                            name: "John"
                        })
                    </Code>
                    <p>Collection implicitly created if it doesn't exist</p>
				</td>
				<td>
                    <Code @name="docs-surrealql-insert-one.surql">
                        INSERT INTO person {
                            name: "John"
                        }
                    </Code>
                    <p>Table implicitly created if it doesn't exist</p>
                </td>
			</tr>
			<tr>
				<td>
                    <Code @name="docs-surrealql-mongo-insert-many.surql">
                        db.person.insertMany([
                            {name: "John"},
                            {name: "Jane"},
                        ])
                    </Code>
				</td>
				<td>
                    <Code @name="docs-surrealql-insert-many.surql">
                        INSERT INTO person [
                            {name: "John"},
                            {name: "Jane"}
                        ]
                    </Code>
                </td>
			</tr>
			<tr>
				<td>
                    <Code @name="docs-surrealql-mongo-index.surql">
                        db.person.createIndex({name: 1})
                    </Code>
				</td>
				<td>
                    <Code @name="docs-surrealql-index-name.surql">
                        DEFINE INDEX personNameIndex
                        ON TABLE person COLUMNS name
                    </Code>
                </td>
			</tr>
		</tbody>
	</table>
</Layout::Table>


<Layout::Gap small />

<Docs::Heading @level="4" @id="read">Read</Docs::Heading>
<p>
    For more SurrealQL examples,
    see the <Link @link="docs.surrealql.statements.select">select</Link>,
    <Link @link="docs.surrealql.statements.live-select">live select</Link>
    and <Link @link="docs.surrealql.statements.return">return</Link> pages.
</p>
<Layout::Table filled>
	<table>
		<thead>
			<tr>
				<th w-50>MQL</th>
				<th w-50>SurrealQL</th>
			</tr>
		</thead>
		<tbody>
			<tr>
				<td>
                    <Code @name="docs-surrealql-mongo-find-all.surql">
                        db.person.find()
                    </Code>
				</td>
				<td>
                    <Code @name="docs-surrealql-select-all.surql">
                        SELECT *
                        FROM person
                    </Code>
                </td>
			</tr>
			<tr>
				<td>
                    <Code @name="docs-surrealql-mongo-find-person.surql">
                        db.person.find(
                            {},
                            {_id: 0, name: 1}
                        )
                    </Code>
				</td>
				<td>
                    <Code @name="docs-surrealql-select-name.surql">
                        SELECT name
                        FROM person
                    </Code>
                </td>
			</tr>
			<tr>
				<td>
                    <Code @name="docs-surrealql-mongo-find-where.surql">
                        db.person.find(
                            {name: "Jane"},
                            {_id: 0, name: 1}
                        )
                    </Code>
				</td>
				<td>
                    <Code @name="docs-surrealql-select-where.surql">
                        SELECT name
                        FROM person
                        WHERE name = "Jane"
                    </Code>
                </td>
			</tr>
			<tr>
				<td>
                    <Code @name="docs-surrealql-mongo-find-explain.surql">
                        db.person.find(
                            {name: "Jane"},
                            {_id: 0, name: 1}
                        ).explain()
                    </Code>
				</td>
				<td>
                    <Code @name="docs-surrealql-select-explain-person.surql">
                        SELECT name
                        FROM person
                        WHERE name = "Jane"
                        EXPLAIN
                    </Code>
                </td>
			</tr>
			<tr>
				<td>
                    <Code @name="docs-surrealql-mongo-count.surql">
                        db.person.aggregate([
                            { $count: "personCount" }
                        ])
                    </Code>
				</td>
				<td>
                    <Code @name="docs-surrealql-count-person.surql">
                        SELECT count() AS person_count
                        FROM person
                        GROUP ALL
                    </Code>
                </td>
			</tr>
			<tr>
				<td>
                    <Code @name="docs-surrealql-mongo-distinct.surql">
                        db.person.aggregate([
                            { $group: { _id : "$name" } }
                        ])
                    </Code>
				</td>
				<td>
                    <Code @name="docs-surrealql-distinct-person.surql">
                        SELECT array::distinct(name)
                        FROM person
                        GROUP ALL
                    </Code>
                </td>
			</tr>
			<tr>
				<td>
                    <Code @name="docs-surrealql-mongo-limit.surql">
                        db.person.find().limit(10)
                    </Code>
				</td>
				<td>
                    <Code @name="docs-surrealql-limit-person.surql">
                        SELECT *
                        FROM person
                        LIMIT 10
                    </Code>
                </td>
			</tr>
			<tr>
				<td>
                    <Code @name="docs-surrealql-mongo-lookup.surql">
                        db.review.aggregate([{
                            "$lookup": {
                                "from": "person",
                                "localField": "person",
                                "foreignField": "_id",
                                "as": "person_detail"
                            }
                        }])
                    </Code>
				</td>
				<td>
                    <Code @name="docs-surrealql-record-link-person.surql">
                        SELECT *,
                        person.* as person_detail
                        FROM review
                    </Code>
                </td>
			</tr>
		</tbody>
	</table>
</Layout::Table>

<Layout::Gap small />

<Docs::Heading @level="4" @id="update">Update</Docs::Heading>
<p>
    For more SurrealQL examples,
    see the <Link @link="docs.surrealql.statements.update">update</Link> page.
</p>
<Layout::Table filled>
	<table>
		<thead>
			<tr>
				<th w-50>MQL</th>
				<th w-50>SurrealQL</th>
			</tr>
		</thead>
		<tbody>
			<tr>
				<td>
                    <Code @name="docs-surrealql-mongo-update-one.surql">
                        db.person.updateMany(
                            { name: "Jane" },
                            { $set: { last_name: "Doe" } }
                        )
                    </Code>
				</td>
				<td>
                    <Code @name="docs-surrealql-update-one.surql">
                        UPDATE person
                        SET last_name = "Doe"
                        WHERE name = "Jane"
                    </Code>
                </td>
			</tr>
			<tr>
				<td>
                    <Code @name="docs-surrealql-mongo-update-many.surql">
                        db.person.updateMany(
                            { name: "Jane" },
                            { $unset: { last_name: 1 } }
                        )
                    </Code>
				</td>
				<td>
                    <Code @name="docs-surrealql-update-many.surql">
                        UPDATE person
                        UNSET last_name
                        WHERE name = "Jane"
                    </Code>
                </td>
			</tr>
		</tbody>
	</table>
</Layout::Table>

<Layout::Gap small />

<Docs::Heading @level="4" @id="delete">Delete</Docs::Heading>
<p>
    For more SurrealQL examples,
    see the <Link @link="docs.surrealql.statements.delete">delete</Link>
    and <Link @link="docs.surrealql.statements.remove">remove</Link> pages.
</p>
<Layout::Table filled>
	<table>
		<thead>
			<tr>
				<th w-50>MQL</th>
				<th w-50>SurrealQL</th>
			</tr>
		</thead>
		<tbody>
			<tr>
				<td>
                    <Code @name="docs-surrealql-mongo-delete.surql">
                        db.person.deleteMany(
                            { name: "Jane" }
                        )
                    </Code>
				</td>
				<td>
                    <Code @name="docs-surrealql-delete-person.surql">
                        DELETE person
                        WHERE name = "Jane"
                    </Code>
                </td>
			</tr>
			<tr>
				<td>
                    <Code @name="docs-surrealql-mongo-delete-all.surql">
                        db.person.deleteMany({})
                    </Code>
				</td>
				<td>
                    <Code @name="docs-surrealql-delete-all.surql">
                        DELETE person
                    </Code>
                </td>
			</tr>
			<tr>
				<td>
                    <Code @name="docs-surrealql-mongo-remove.surql">
                        db.person.drop()
                    </Code>
				</td>
				<td>
                    <Code @name="docs-surrealql-remove-person.surql">
                        REMOVE TABLE person
                    </Code>
                </td>
			</tr>
		</tbody>
	</table>
</Layout::Table>

<Layout::Gap large />