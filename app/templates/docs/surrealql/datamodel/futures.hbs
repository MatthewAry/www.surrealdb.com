<Crumb>
	<Crumb::Item @link="docs">Documentation</Crumb::Item>
	<Crumb::Item @link="docs.surrealql">SurrealQL</Crumb::Item>
	<Crumb::Item @link="docs.surrealql.datamodel">Data model</Crumb::Item>
	<Crumb::Item @link="docs.surrealql.datamodel.futures">Futures</Crumb::Item>
</Crumb>

<Layout::Text text-l text-f>
    <h2>Futures</h2>
	<p>Futures are values which are only computed when the data is selected and returned to the client. Futures can be stored inside records, to enable dynamic values which are always calculated when queried.</p>
</Layout::Text>

<Layout::Gap mini />

<Layout::Text text-l text-f>
	<h3>Simple futures</h3>
	<p>Any value or expression can be used inside a future. This value will be dynamically computed on every access to the record.</p>
	<Code @name="docs/datamodel/futures/simple.sql" />
</Layout::Text>

<Layout::Gap mini />

<Layout::Text text-l text-f>
	<h3>Futures depending on other fields</h3>
	<p>Futures can be used to calculate values which dynamically change based on other fields. This value will be dynamically computed, on every access to the record, and will use the other field when it is accessed.</p>
	<Code @name="docs/datamodel/futures/dependent-1.sql" />
	<p>Futures can also dynamically access remote records, perform subqueries, or make use of graph traversal.</p>
	<Code @name="docs/datamodel/futures/dependent-2.sql" />
</Layout::Text>

<Layout::Gap mini />

<Layout::Text text-l text-f>
	<h3>Next steps</h3>
	<p>You've now seen how to create dynamically computed properties on records, using either simple values, and values which depend on local and remote record fields. Take a look at the next chapter to understand how types can be cast and converted to other types.</p>
</Layout::Text>

<Layout::Gap large />