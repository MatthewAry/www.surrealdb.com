<Crumb>
	<Crumb::Item @link="docs">Documentation</Crumb::Item>
	<Crumb::Item @link="docs.surrealql">SurrealQL</Crumb::Item>
	<Crumb::Item @link="docs.surrealql.statements">Statements</Crumb::Item>
	<Crumb::Item @link="docs.surrealql.statements.define"><code>DEFINE</code> statement</Crumb::Item>
	<Crumb::Item @link="docs.surrealql.statements.define.table"><code>TABLE</code></Crumb::Item>
</Crumb>

<Layout::Text text-l text-f>
	<h2><code>DEFINE TABLE</code> statement</h2>
	<p>
		The <code>DEFINE TABLE</code> statement allows you to declare your table by name, enabling you to apply strict
		controls to a table's schema by making it <code>SCHEMAFULL</code>, create a foreign table view, and set permissions
		specifying what operations can be performed on the field.
	</p>
	<h4>Requirements</h4>
	<ul>
		<li>You must be authenticated as a root, namespace, or database user before you can use the <code>DEFINE TABLE</code> statement.</li>
		<li><LinkTo @route="docs.surrealql.statements.use">You must select your namespace and database</LinkTo> before you can use the <code>DEFINE TABLE</code> statement.</li>
	</ul>
</Layout::Text>

<Layout::Gap mini />

<Layout::Text text-l text-f>
	<h3>Statement syntax</h3>
	<Code @name="docs/surrealql/statements/define/table/syntax.typescript" text="SQL Syntax" />
</Layout::Text>

<Layout::Gap mini />

<Layout::Text text-l text-f>
	<h3>Example usage</h3>
	<p>The following expression shows the simplest way to use the <code>DEFINE TABLE</code> statement.</p>
	<Code @name="docs/surrealql/statements/define/table/name-table.sql" />
	<p>The following example uses the <code>DROP</code> portion of the <code>DEFINE TABLE</code> statement. This would be like telling the database to drop any table that has the given name and replace it with a new one of the same name.</p>
	<Code @name="docs/surrealql/statements/define/table/drop-table.sql" />
	<p>The following example demonstrates the <code>SCHEMAFULL</code> portion of the <code>DEFINE TABLE</code> statement. When a table is defined as schemafull, the database strictly enforces any schema definitions that are specified using the <code>DEFINE TABLE</code> statement. New fields can not be added to a <code>SCHEMAFULL</code> table unless they are defined via the <code>DEFINE FIELD</code> statement.</p>
	<Code @name="docs/surrealql/statements/define/table/schemafull-table.sql" />
	<p>The following example demonstrates the <code>SCHEMALESS</code> portion of the <code>DEFINE TABLE</code> statement. This allows you to explicitly state that the specified table has no schema.</p>
	<Code @name="docs/surrealql/statements/define/table/schemaless-table.sql" />
	<p>The following shows how to make a projection using the <code>DEFINE TABLE</code> statement. This is similar to making a view in a RDBMS.</p>
	<Code @name="docs/surrealql/statements/define/table/projection-table.sql" />
	<p>The following shows how to set table level <code>PERMISSIONS</code> using the <code>DEFINE TABLE</code> statement. This allows you to set independent permissions for selecting, creating, updating, and deleting data.</p>
	<Code @name="docs/surrealql/statements/define/table/permissions-table.sql" />
</Layout::Text>

<Layout::Gap large />